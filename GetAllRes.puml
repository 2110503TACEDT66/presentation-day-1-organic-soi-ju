@startuml Manage Reservation (GET ALL)

header Reservation Sequence Diagram
footer Page %page% of %lastpage%
title "Manage Reservation (GET ALL)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:reservations" as routerReservations
participant "<<controllers>>\n:reservations" as controllersReservations
participant "<<model>>\n:Reservation" as modelReservation
database "<<MongoDB>>\n:reservations" as ReservationsDatabase

client->server ++:req.get('/reservations/:id')
server->routerReservations ++:app.use('/reservations', reservations)
routerReservations -> controllersReservations ++:getReservation()
alt Not Admin
    controllersReservations->modelReservation ++:find({user: req.user.id}).populate({path: 'massage_shop', select: 'name province tel'})
else Admin
    alt Has Shop ID
        controllersReservations->modelReservation: find({massage_shop: req.params.massageshopId}).populate({path: 'massage_shop', select: 'name province tel'})
    else No Shop ID
        controllersReservations->modelReservation: find().populate({path: 'massage_shop', select: 'name province tel'})
    end
end
modelReservation ->ReservationsDatabase ++: ReservationSchema
ReservationsDatabase --> modelReservation --: reservations
controllersReservations <-- modelReservation --:reservations
controllersReservations->client --:response

@enduml
